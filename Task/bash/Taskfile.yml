---
# https://taskfile.dev

version: "3"

set:
  - nounset
  - errexit
  - pipefail

includes:
  base:
    taskfile: ../Taskfile.yml
    internal: true

tasks:
  lint:
    desc: Run the linter(s); paved road projects use the Seiso goat 🐐
    platforms: [linux, darwin]
    cmds:
      - task: base:lint
        vars:
          INPUT_AUTO_FIX: '{{.INPUT_AUTO_FIX | default ""}}'
          INPUT_DISABLE_MYPY: '{{.INPUT_DISABLE_MYPY | default ""}}'
          INPUT_EXCLUDE: '{{.INPUT_EXCLUDE | default ""}}'
          INPUT_LOG_LEVEL: '{{.INPUT_LOG_LEVEL | default ""}}'
          VERSION: '{{.VERSION}}'

  validate:
    desc: Validate the pre-commit config and hooks files
    cmds:
      - task: base:validate

  build:
    desc: Build the project; docker images, compiled binaries, etc.
    platforms: [linux, darwin]
    requires:
      vars: ['VERSION']
    cmds:
      - task: base:pipeline-docker-multiplatform-init
      - task: base:build
        vars:
          VERSION: '{{.VERSION}}'
          PLATFORM: '{{.PLATFORM}}'
          DOCKER_BUILDX_CUSTOM_ARGS: '{{.DOCKER_BUILDX_CUSTOM_ARGS | default ""}}'
          DOCKER_BUILDX_CUSTOM_CONTEXT: '{{.DOCKER_BUILDX_CUSTOM_CONTEXT}}'
          DOCKER_BUILDX_CUSTOM_TAGS: '{{.DOCKER_BUILDX_CUSTOM_TAGS | default ""}}'

  update:
    desc: >
      Update the project dev and runtime dependencies, and other misc components
    cmds:
      - task: base:update

  release:
    desc: Cut a project release
    cmds:
      - task: base:release

  publish:
    desc: Publish the project artifacts; docker images, compiled binaries, etc.
    platforms: [linux, darwin]
    requires:
      vars: ['VERSION']
    cmds:
      - task: base:pipeline-docker-multiplatform-init
      - task: base:publish
        vars:
          VERSION: '{{.VERSION}}'
          PLATFORM: '{{.PLATFORM}}'
          DOCKER_BUILDX_CUSTOM_ARGS: '{{.DOCKER_BUILDX_CUSTOM_ARGS | default ""}}'
          DOCKER_BUILDX_CUSTOM_CONTEXT: '{{.DOCKER_BUILDX_CUSTOM_CONTEXT}}'
          DOCKER_BUILDX_CUSTOM_TAGS: '{{.DOCKER_BUILDX_CUSTOM_TAGS | default ""}}'

  clean:
    desc: Clean up build artifacts, cache files/directories, temp files, etc.
    cmds:
      - task: base:clean

  sbom:
    desc: Generate project SBOMs
    cmds:
      - task: base:sbom
        vars:
          DOCKER_BUILDX_CUSTOM_ARGS: '{{.DOCKER_BUILDX_CUSTOM_ARGS | default ""}}'
          DOCKER_BUILDX_CUSTOM_CONTEXT: '{{.DOCKER_BUILDX_CUSTOM_CONTEXT}}'
          DOCKER_BUILDX_CUSTOM_TAGS: '{{.DOCKER_BUILDX_CUSTOM_TAGS | default ""}}'

  vulnscan:
    desc: Vuln scan the SBOM
    cmds:
      - task: base:vulnscan
