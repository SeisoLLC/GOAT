---
name: "CI"

on:  # yamllint disable-line rule:truthy
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  python_version: "3.11"

jobs:
  test:
    name: Test
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ env.python_version }}
      - uses: actions/cache@v3
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.os }}-python-${{ env.python_version }}-pipenv-${{ hashFiles('Pipfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-python-${{ env.python_version }}-pipenv-
            ${{ runner.os }}-python-
      - name: Install the dependencies
        run: python -m pip install --upgrade pipenv
      - name: Install Task
        uses: arduino/setup-task@v1
      - name: Initialize the repo
        run: task -v init
      - name: Build the goat
        run: task -v build
      - name: Run the tests
        run: task -v test
  bump-pre-commit:
    name: Bump pre-commit
    needs: [test]
    if: "${{ github.event_name == 'push' && !startsWith(github.event.head_commit.message, 'Bump pre-commit revision') }}"
    permissions:
      contents: write
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          fetch-depth: 0
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ env.python_version }}
      - uses: actions/cache@v3
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.os }}-python-${{ env.python_version }}-pipenv-${{ hashFiles('Pipfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-python-${{ env.python_version }}-pipenv-
            ${{ runner.os }}-python-
      - name: Install the dependencies
        run: python -m pip install --upgrade pipenv
      - name: Install Task
        uses: arduino/setup-task@v1
      - name: Initialize the repo
        run: task init
      - name: Bump the pre-commit revision
        run: |
          git config --global user.name 'Seiso Automation'
          git config --global user.email 'automation@seisollc.com'
          # Non-string variables are pending https://github.com/go-task/task/issues/140
          task pre-commit-update -- commit
          BRANCH="$(git branch --show-current)"
          git push --atomic origin "${BRANCH}"
  distribute:
    name: Distribute
    if: ${{ github.event_name == 'push' }}
    runs-on: ubuntu-20.04
    needs: [test, bump-pre-commit]
    permissions:
      contents: write
    steps:
      # This should check out the reference or SHA of the event that caused this to be triggered, not the new commit from the prior job
      - name: Checkout the repository
        uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ env.python_version }}
      - uses: actions/cache@v3
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.os }}-python-${{ env.python_version }}-pipenv-${{ hashFiles('Pipfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-python-${{ env.python_version }}-pipenv-
            ${{ runner.os }}-python-
      - name: Install dependencies
        run: python -m pip install --upgrade pipenv
      - name: Install Task
        uses: arduino/setup-task@v1
      - name: Initialize the repo
        run: task init
      - name: Build the goat
        run: task build
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Publish the release README to Docker Hub
        uses: peter-evans/dockerhub-description@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          repository: seiso/goat
          short-description: Seiso's Grand Opinionated AutoTester (GOAT)
      - name: Publish the goat to Docker Hub
        run: task publish
      - name: Delete the latest release on GitHub
        uses: dev-drprasad/delete-tag-and-release@v0.2.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          delete_release: true
          tag_name: latest
      - name: Publish a latest release to GitHub
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: latest
          draft: false
          prerelease: false
