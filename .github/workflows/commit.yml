---
name: "CI"

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    name: Test
    runs-on: Ubuntu-20.04
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: "3.10"
      - name: Install the dependencies
        run: |
          python -m pip install --upgrade pipenv
          pipenv install --dev
      - name: Build the goat
        run: pipenv run invoke build --debug
      - name: Goat the goat
        run: pipenv run invoke goat --debug
  distribute:
    name: Distribute
    if: ${{ github.event_name == 'push' }}
    runs-on: Ubuntu-20.04
    needs: test
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pipenv
          pipenv install --dev
      - name: Build the goat
        run: pipenv run invoke build --debug
      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Publish the release README to Docker Hub
        uses: peter-evans/dockerhub-description@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          repository: seiso/goat
          short-description: Seiso's Grand Opinionated AutoTester (GOAT)
      - name: Publish the goat to Docker Hub
        run: pipenv run invoke publish --debug
      - name: Delete the latest release on GitHub
        uses: dev-drprasad/delete-tag-and-release@v0.2.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          delete_release: true
          tag_name: latest
      - name: Publish a latest release to GitHub
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: latest
          draft: false
          prerelease: false
