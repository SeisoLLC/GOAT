---
name: "CI"

on:  # yamllint disable-line rule:truthy
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  python_version: "3.11"

defaults:
  run:
    shell: 'bash --noprofile --norc -Eeuo pipefail {0}'

jobs:
  test:
    name: Test
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          - linux/arm64
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ env.python_version }}
      - uses: actions/cache@v3
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.os }}-python-${{ env.python_version }}-pipenv-${{ hashFiles('Pipfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-python-${{ env.python_version }}-pipenv-
            ${{ runner.os }}-python-
      - name: Install the dependencies
        run: python -m pip install --upgrade pipenv
      - name: Install Task
        uses: arduino/setup-task@v1
      - name: Initialize the repo
        run: task -v init
      - name: Set up QEMU for cross-platform emulation
        uses: docker/setup-qemu-action@v2
      - name: Build the goat
        run: task -v build
        env:
          PLATFORM: ${{ matrix.platform }}
      - name: Run the tests
        run: task -v test -- debug
        env:
          PLATFORM: ${{ matrix.platform }}
  bump-version:
    name: Bump version
    needs: [test]
    if: "${{ github.event_name == 'push' && !startsWith(github.event.head_commit.message, 'Bump version: 2') }}"
    permissions:
      contents: write
    runs-on: ubuntu-22.04
    outputs:
      tag: ${{ steps.bump-version.outputs.tag }}
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          fetch-depth: 0
      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.python_version }}
      - uses: actions/cache@v3
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.os }}-python-${{ env.python_version }}-pipenv-${{ hashFiles('Pipfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-python-${{ env.python_version }}-pipenv-
            ${{ runner.os }}-python-
      - name: Install the dependencies
        run: python -m pip install --upgrade pipenv
      - name: Install Task
        uses: arduino/setup-task@v1
      - name: Initialize the repo
        run: task -v init
      - name: Build the goat
        run: task -v build
      - name: Update and bump the version
        id: bump-version
        run: |
          task -v release
          TAG="$(git describe --tags)"
          BRANCH="$(git branch --show-current)"
          git push --atomic origin "${BRANCH}" "${TAG}"
          echo "tag=${TAG}" >> "${GITHUB_OUTPUT}"
      - name: Publish the release to GitHub
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: ${{ steps.bump-version.outputs.tag }}
          tag_name: ${{ steps.bump-version.outputs.tag }}
          draft: false
          prerelease: false
  distribute:
    name: Distribute
    if: ${{ github.event_name == 'push' }}
    runs-on: ubuntu-22.04
    needs: [test, bump-version]
    permissions:
      contents: write
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3
        with:
          ref: ${{ needs.bump-version.outputs.tag }}
          fetch-depth: 0
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ env.python_version }}
      - uses: actions/cache@v3
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.os }}-python-${{ env.python_version }}-pipenv-${{ hashFiles('Pipfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-python-${{ env.python_version }}-pipenv-
            ${{ runner.os }}-python-
      - name: Install dependencies
        run: python -m pip install --upgrade pipenv
      - name: Install Task
        uses: arduino/setup-task@v1
      - name: Initialize the repo
        run: task -v init
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Publish the release README to Docker Hub
        uses: peter-evans/dockerhub-description@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          repository: seiso/goat
          short-description: Seiso's Grand Opinionated AutoTester (GOAT)
      - name: Set up QEMU for cross-platform emulation
        uses: docker/setup-qemu-action@v2
      - name: Build and publish all the supported images to Docker Hub
        run: task -v publish
        env:
          PLATFORM: all
